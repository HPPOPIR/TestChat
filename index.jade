doctype 5
html
  head
    link(href='/stylesheets/style.css', rel='stylesheet')
    script(src='http://code.jquery.com/jquery-1.6.1.min.js')
    script(src='/socket.io/socket.io.js')
    script
      // socket.io specific code
      var socket = io.connect();

      socket.on('connect', function () {
        $('#chat').addClass('connected');
      });

      socket.on('announcement', function (msg) {
        $('#lines').append($('<p>').append($('<em>').text(msg)));
      });

      socket.on('nicknames', function (nicknames) {
        $('#nicknames').empty().append($('<span>Online: </span>'));
        for (var i in nicknames) {
          $('#nicknames').append($('<b>').text(nicknames[i]));
        }
      });

      socket.on('emptyNickname', function () {
        $('#nickname-blank').css('visibility', 'visible');
      });

      socket.on('user message', message);
      socket.on('reconnect', function () {
        $('#lines').remove();
        message('System', 'Reconnected to the server');
      });

      socket.on('reconnecting', function () {
        message('System', 'Attempting to re-connect to the server');
      });

      socket.on('error', function (e) {
        message('System', e ? e : 'A unknown error occurred');
      });

      function message (from, msg) {
        $('#lines').append($('<p>').append($('<b>').text(getDateTime() + '  ' + from + ': '), msg));
      }

      function getDateTime() {
      var now = new Date();
        return (now.getHours() + ":" + now.getMinutes() + ":" + now.getSeconds());
      }

      function getOnlineUsers() {
        $.get('/getOnlineUsers', function (onlineUsers) {
          var onlineUsersDiv = document.getElementById('online-users');
          for (var user in onlineUsers) {
            var chbElement = document.createElement('input');
            chbElement.type = 'checkbox';
            chbElement.id = user;

            var lblElement = document.createElement('label');
            lblElement.htmlFor = user;
            lblElement.appendChild(document.createTextNode(user));


            onlineUsersDiv.appendChild(chbElement);
            onlineUsersDiv.appendChild(lblElement);
          }
          onlineUsersDiv
        });
      }

      // dom manipulation
      $(function () {
        $('#set-nickname').submit(function (ev) {
          $('#nickname-blank').css('visibility', 'hidden');
          $('#nickname-err').css('visibility', 'hidden');
          socket.emit('nickname', $('#nick').val(), function (set) {
            if (!set) {
              clear();
              getOnlineUsers();
              $('#nickname').hide();
              $('#messages').hide();
              $('#online-users').show();

            }
            $('#nickname-err').css('visibility', 'visible');
          });
          return false;
        });

        $('#send-message').submit(function () {
          message('me', $('#message').val());
          socket.emit('user message', $('#message').val());
          clear();
          $('#lines').get(0).scrollTop = 10000000;
          return false;
        });

        function clear () {
          $('#message').val('').focus();
        };
      });



   body
       #chat
           #nickname
               form.wrap#set-nickname
                 p Enter your nickname.
                 input#nick
                 br
                 button#enter-button Enter
                 p#nickname-err Nickname already in use!
                 p#nickname-blank Nickname shouldn't be blank!
           #online-users
               div
                 button#selectAllButton Select all
               label Users:
           #connecting
               .wrap Connecting to socket.io server
           #messages
               #nicknames
               #lines
               form#send-message
                   input#message
                   button Send

    script
        $('#selectAllButton').click(function () {
          $('#online-users input[type="checkbox"]').each( function (key, val) { $(this).prop('checked', true); } )
        });